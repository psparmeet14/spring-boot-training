openapi: 3.0.3 #mandatory root element
info: #provides meta-data about your API | mandatory root element
  title: MyEComApp APIs Definition #mandatory field
  description: |
    # About Us
    **MyEComApp** is an open market product selling company. Any website can list our products by using
    our _APIs_. Shipping & other logistics will be taken care by us. You will get an `Affiliate commission`
    for selling our products.
    ## Categories supported
      - Mobiles
        - Apple
        - Samsung
        - OnePlus
      - Laptops
      - Televisions
      - Headphones
  termsOfService: www.google.com
  contact: 
    name: API Support
    url: https://www.google.com
    email: psparmeet14@gmail.com
  license: 
    name: MyApplication License 2.0 #mandatory field
    url: https://www.google.com 
  version: 0.0.1 #mandatory field
servers: #endpoint url to access consume apis
  - url: https://development.myapplication-server.com/v1 #mandatory field
    description: Development server
  - url: https://staging.myapplication-server.com/v1
    description: Staging server
  - url: https://prod.myapplication-server.com/v1
    description: Production server
  - url: https://{username}.server.com:{port}/{version}
    variables:
      username:
        default: demo
        description: This value is assigned by the service provider.
      port:
        enum:
          - "8443"
          - "443"
        default: "8443"
      version: 
        default: v1
tags:
  - name: Categories
    description: Categories-related operations
  - name: Products
    description: Products-related operations
  - name: Orders
    description: Orders-related operations
  - name: Purchases
    description: Purchases-related operations
paths: #manadatory root element
  /categories:
    get:
      tags:
        - Categories
      summary: List all categories
      description: Returns the list of categories supported by MyEComApp
      operationId: getCategories
      parameters:
        - $ref: "#/components/parameters/categoryIdQueryParam"
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                    - categoryId: 101
                      name: Mobiles
                    - categoryId: 102
                      name: Laptops
                    - categoryId: 103
                      name: Headphones
                    - categoryId: 104
                      name: Televisions
                single-category-data:
                  summary: Single category example data
                  value: 
                    - categoryId: 101
                      name: Mobiles
        '500':
          $ref: "#/components/responses/InternalServerError"
  /categories/{categoryId}:
    get:
      tags:
        - Categories
      summary: List particular category details
      description: Returns the particular category details based on categoryId from MyEComApp
      operationId: getCategoryDetails
      parameters:
        - $ref: "#/components/parameters/categoryIdPathParam"
      responses:
        '200': # OK
          description: A particular category
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /products:
    get:
      tags:
        - Products
      summary: List all products
      description: |
        Returns the list of all the products (or all the products in the specified category) 
        supported by MyEComApp
      operationId: getProducts
      parameters:
        - $ref: "#/components/parameters/categoryIdQueryParam"
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              examples:
                products-data:
                  summary: Products example data
                  value:
                    - productId: 101
                      name: Apple Iphone 14 Pro
                      price: 999.99
                      categoryName: Mobiles
                      quantity: 96
                    - productId: 102
                      name: Samsung S23 Ultra
                      price: 899.99
                      categoryName: Mobiles
                      quantity: 121
                    - productId: 103
                      name: OnePlus 11 Pro 5G
                      price: 750.99
                      categoryName: Mobiles
                      quantity: 67
        '500':
          $ref: "#/components/responses/InternalServerError"
  /products/{productId}:
    get:
      tags:
        - Products
      summary: Returns product details
      description: |
        Returns the particular product details from MyEComApp
      operationId: getProductDetails
      parameters:
        - $ref: "#/components/parameters/productIdPathParam"
      responses:
        '200':
          description: Returns product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /orders:
    post:
      tags:
        - Orders
      summary: Create order
      description: |
        Post order details to MyEComApp for processing and shipping
      operationId: saveOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                  minItems: 1
                  maxItems: 10
                  uniqueItems: true
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
          links:
            GetOrderByOrderId:
              $ref: "#/components/links/GetOrderByOrderId"
        '500':
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - Orders
      summary: Update order
      description: |
        Update order details to MyEComApp for processing 
        and shipping
      operationId: updateOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '200':
          description: Order updated successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - Orders
      summary: Delete order
      description: Delete order details from MyEComApp
      operationId: deleteOrderDetails
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '204': #no content
          description: Order details cancelled successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - Orders
      summary: Get Order details
      description: Returns complete order details from MyEComApp
      operationId: getOrderDetails
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '200':
          description: Fetched the order details successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: Returns complete Order Details from MyEComApp
      operationId: getOrderDetailsUsingPathParam
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/orderIdPathParam"
      responses:
        '200': 
          description: Fetched the Order Details successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /oneOfOrder:
    post:
      tags:
        - Orders
      summary: Insert OneOf the Order Details
      description: Insert OneOf the Order Details in MyEComApp
      operationId: demoOfOneOf
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: object
                  oneOf: # ONLY ONE OF THE SCHEMA IS ALLOWED
                    - $ref: "#/components/schemas/Mobile"
                    - $ref: "#/components/schemas/Laptop"
                address:
                  $ref: "#/components/schemas/Address"
              required:
                - products
                - address
      responses:
        '200':
          description: Order placed successfully
  /anyOfOrder:
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: Get Order Details based on Order Id
      operationId: demoOfAnyOf
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
        - name: fetchType
          in: query
          required: true
          schema:
            type: string
            enum:
              - summary
              - details
          description: >
            Fetch Type:
              * `summary` - Will provide Order Summary
              * `details` - Will provide Order Summary and Order Address
      responses:
        '200':
          description: Returns Product Details
          content:
            application/json:
              schema:
                anyOf: # ONE OR MORE SCHEMAS (COMBINATION) ARE ALLOWED
                  - $ref: "#/components/schemas/OrderSummary"
                  - $ref: "#/components/schemas/OrderAddress"
  /purchases:
    get:
      tags:
        - Purchases
      summary: List all your purchases
      description: Returns the list of all purchases done by you
      operationId: getPurchases
      responses:
        '200':
          description: A list of purchases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Purchase"
        '500':
          $ref: "#/components/responses/InternalServerError"
components:
  parameters:
    categoryIdPathParam:
      name: categoryId
      in: path
      required: true
      schema:
        type: integer
        minimum: 100
        maximum: 1000
      example: 201
    categoryIdQueryParam:
      name: categoryId
      in: query
      schema:
        type: integer
        minimum: 100
        maximum: 1000
      examples:
        mobiles:
          summary: Use this example for mobiles
          value: 101
        laptops:
          value: 102
        headphones:
          value: 103
        televisions:
          value: 104
    orderIdQueryParam:
      name: orderId
      in: query
      required: true
      schema:
        type: integer
    orderIdPathParam:
      name: orderId
      in: path
      required: true
      schema: 
        type: integer
    productIdPathParam:
      name: productId
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 1000
      example: 999
  schemas:
    Address:
      type: object
      properties:
        addressLine:
          type: string
        city:
          type: string
        state: 
          type: string
          enum:
            - California
            - Texas
            - Indiana
            - New York
        zipcode:
          type: string
        isOfficeAddress:
          type: boolean
      required: [addressLine, city, state, zipcode]
    Product:
      type: object
      properties:
        productId:
          type: integer # normal numbers without decimal values
        name:
          type: string
        price:
          type: number # decimal values like float and double
          format: float
        categoryName:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date
          readOnly: true
        quantity:
          type: integer
          description: |
            ***Quantity*** represents `stock` value when this field is being sent by 
            MyEComApp. Whereas in the scenarios of consumer sending this field, it represents
            `number of product items` inside the order. Consumers are expected to handle
            the scenario of stopping the end user <u>*when the stock value is 0*</u>
    Category:
      type: object
      properties:
        categoryId:
          type: integer
        name:
          type: string
    Purchase:
      type: object
      properties:
        purchaseId: 
          type: integer
        articleName:
          type: string
    Mobile:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            networkType:
              type: string
              enum:
                - 4G
                - 5G
              example: 5G
          required: [networkType]
    Laptop:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            ram:
              type: string
              enum:
                - 8 GB
                - 16 GB
                - 32 GB
          required: [ram]
    OrderSummary:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    OrderAddress:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address"
  responses:
    InternalServerError:
      description: |
        An error occurred while processing the request. Please contact
        support@myecomapp.com
  links:
    GetOrderByOrderId:
      description: >
        The `orderId` value returned in the response can be used as input
        parameter in `GET /orders`.
      operationId: getOrderDetails
      parameters:
        orderId: '$response.body#/orderId'


                